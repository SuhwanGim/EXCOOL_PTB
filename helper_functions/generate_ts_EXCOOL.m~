function ts = generate_ts_EXCOOL()
% ts = generate_ts_EXCOOL

% Three block desgin
% A total 4 run 
% 18 trials per run 
% 6 trials per block


% total run = 6;
% total trial = 12;
targeto = [];
words_val = [];
rng('shuffle');
%% EXPERIMENTAL PARAMETER
% ** Word itself
block_all= []; 
T1=readtable('data/wordlists/kor_personal.xlsx');

pos1 = T1.WID(find(T1.positive==+1));
neg1 = T1.WID(find(T1.positive==-1));

% WID
T1pos = pos1(randperm(12));
T1neg = neg1(randperm(12));

T2pos = pos1(randperm(12));
T2neg = neg1(randperm(12));

T3pos = pos1(randperm(12));
T3neg = neg1(randperm(12));

WID=1:24;    
trial_idx = [1:3; 4:6; 7:9; 10:12];
% BLOCK DESGIN 
for run_i=1:4    
    rnNB = randperm(3);
    target_all{run_i} = [repmat(rnNB(1),6,1);repmat(rnNB(2),6,1);repmat(rnNB(3),6,1)];
    WID_ALL{[T1neg(trial_idx(run_i,:))' T1pos(trial_idx(run_i,:))'];
    
    block_all{run_i} = Blocknames(rnNB);
    for block_i=1:3
        T1pos(1:3)
        
    end
end        
    
    

% randomization
for run_i = 1:6
    % ** Target
    % 1: self
    % 2: friend
    % 3: celebrities
    tar_cond = [1 2 3];
    temp_tar = [];
    
    for tar_i = 1:4
        rnNB = randperm(3);
        temp_tar{tar_i}= tar_cond(rnNB);
    end
    targeto{run_i} = cell2mat(temp_tar);
    
    % ** Valence (word)
    % -1: Negative
    % +1: Positive
    temp_val = [];
    tar_val = [-1 +1];
    for tar_i = 1:6
        rnNB = randperm(2);
        temp_val{tar_i}= tar_val(rnNB);
    end
    words_val{run_i} = cell2mat(temp_val);
    
    
    T.WID(T.positive == words_val{run_i})
    
    
    % ** ITI and ISI
    temp_iti = repmat({[4 4], [3 5], [5 3]},1,4); % ISI    
    rnNB = randperm(12);
    I1{run_i} = temp_iti(rnNB);
    
end


%% ISI ITI
temp_int = [];
ts = [];
ts.cond_type = condname;
ts.time_generated = datestr(clock, 0);
ts.target = targeto;
ts.words_val = words_val;

for run_i = 1:6
    
    % for each trial
    for trial_i = 1:16
        ts.t{run_i}{trial_i}.stimlv = S1{run_i}(trial_i);
        
        ts.t{run_i}{trial_i}.ITI = I1{run_i}{trial_i}{1};
        ts.t{run_i}{trial_i}.ISI1 = I1{run_i}{trial_i}{2};
        ts.t{run_i}{trial_i}.ISI2 = I1{run_i}{trial_i}{3};
        
        
        ts.t{run_i}{trial_i}.rating1 = R1{run_i}{trial_i}{1};
        ts.t{run_i}{trial_i}.rating2 = R1{run_i}{trial_i}{2};
        
        
    end
end

disp('Trial sequences is generated');